name: Run Database Migration
on:
  push:
    branches:
      - dev
    paths:
      - 'klubiq-db/**'
      - '.github/workflows/run-migrations-staging.yaml'
env:
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  SYNCHRONIZE_DB: ${{ secrets.SYNCHRONIZE_DB }}
  NODE_ENV: ${{ secrets.ENV }}

jobs:
  migration:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # with:
          # sparse-checkout: klubiq-db
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '22'

      - name: Install root dependencies
        run: npm ci

      - name: Build Common Library
        run: npm run build --workspace=libs/common
 
      - name: Build Database project
        run: |
          cd klubiq-db
          npm ci
          npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            klubiq-db/build/migrations/
            klubiq-db/package*.json
            klubiq-db/node_modules
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: artifacts/
      - name: copy and run migration via ssh
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_CERT }}
          SOURCE: 'artifacts/'
          EXCLUDE: '/node_modules/, node_modules, /node_modules, .github, .github/**, .git, .git/**'
          TARGET: ${{ vars.DB_TARGET_DIR }}
          SCRIPT_BEFORE: |
            if [ ! -d "${{ vars.DB_TARGET_DIR }}" ]; then
              mkdir -p ${{ vars.DB_TARGET_DIR }}
            fi
            sudo chown $USER ${{ vars.DB_TARGET_DIR }}
            cd ${{ vars.DB_TARGET_DIR }}
          SCRIPT_AFTER: |
            cd ${{ vars.DB_TARGET_DIR }}
            set -e # Exit on any error      
            export DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            export DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            export DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            export SYNCHRONIZE_DB=${{ secrets.SYNCHRONIZE_DB }}
            export NODE_ENV=${{ secrets.ENV }}
            echo "Running NPM INSTALL"
            npm ci || exit 1
            echo "Running NPM GENERATE MIGRATION"
            npm run generate:migration || exit 1
            echo "Running NPM MIGRATION"
            npm run migration || exit 1
            echo "CLEANING UP"
            rm -rf node_modules
