

name: Deploy Klubiq dasboard API
on:
  push:
    branches: 
      - dev
    paths:
       - 'apps/klubiq-dashboard/**'
  workflow_run:
    workflows: ['Run Tests']
    types:
      - completed
env: 
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  SYNCHRONIZE_DB: ${{ secrets.SYNCHRONIZE_DB }}
  NODE_ENV: ${{ secrets.ENV }}
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
  FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
  EMAIL_API_KEY: ${{ secrets.EMAIL_API_KEY }}
  EMAIL_VERIFICATION_BASE_URL: ${{ vars.EMAIL_VERIFICATION_BASE_URL }}
  CONTINUE_URL_PATH: ${{ vars.CONTINUE_URL_PATH }}
  GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
  APP: klubiq-dashboard-api
  PRIVATE_KEY: ${{ secrets.CERTIFICATE }}
  HOSTNAME: ${{ secrets.HOSTNAME }}
  USERNAME: ${{ secrets.USERNAME }}
  HEALTH_CHECK_URL: ${{ vars.HEALTH_CHECK_URL }}
  APP_NAME: ${{ vars.APP_NAME }}
  APP_VERSION: ${{ vars.APP_VERSION }}

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load Google Service file
        run: |
          echo $GOOGLE_SERVICES_JSON | base64 --decode > config.json
          npm install
          npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
         name: artifacts
         path: |
             dist
             config.json
             package.json
             package-lock.json
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download prod artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: artifacts/

      - name: Deploy to Lightsail
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_CERT }}
          SOURCE: "artifacts/"
          EXCLUDE: "/node_modules/, node_modules, /node_modules"
          TARGET: ${{ secrets.TARGET_DIR }}
          SCRIPT_BEFORE: |
            sudo chown $USER ${{ secrets.TARGET_DIR }}
            cd ${{ secrets.TARGET_DIR }}
          SCRIPT_AFTER: |
            cd ${{ secrets.TARGET_DIR }}
            cat << EOF >> .env        
              DATABASE_HOST=${{ secrets.DATABASE_HOST }}
              DATABASE_PORT=${{ secrets.DATABASE_PORT }}
              DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
              DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
              DATABASE_NAME=${{ secrets.DATABASE_NAME }}
              SYNCHRONIZE_DB=${{ secrets.SYNCHRONIZE_DB }}
              NODE_ENV=${{ secrets.ENV }}
              FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}
              FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
              FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
              FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
              FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
              FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
              FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}
              EMAIL_API_KEY=${{ secrets.EMAIL_API_KEY }}
              EMAIL_VERIFICATION_BASE_URL=${{ vars.EMAIL_VERIFICATION_BASE_URL }}
              CONTINUE_URL_PATH=${{ vars.CONTINUE_URL_PATH }}
              HEALTH_CHECK_URL=${{ vars.HEALTH_CHECK_URL }}
              APP_NAME=${{ vars.APP_NAME }}
              APP_VERSION=${{ vars.APP_VERSION }}
            EOF
            npm pkg delete scripts.prepare && npm ci --omit=dev && npm cache clean --force
            pm2 start ${{ secrets.TARGET_DIR }}/dist/apps/klubiq-dashboard/main.js --name=${{ env.APP }}
            
            

  
